#Honey Production
#This is a Codecademy project investigating the decline of honeybees and how the trends of the past predict the future for the honeybees.

import codecademylib3_seaborn
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn import linear_model

df = pd.read_csv("https://content.codecademy.com/programs/data-science-path/linear_regression/honeyproduction.csv")

#exploring the df
print(df.head(10))

#exploring the total production of honey per year
prod_per_year = df.groupby('year').totalprod.mean().reset_index()

#creating variables for a regression; X is set to production per year
X = df.year
X = X.values.reshape(-1, 1)

#creating variables for a regression; y is set to total production
y = df.totalprod

#plot y vs X as a scatterplot
plt.scatter(X, y)
plt.show()

##Create a linear regression model from scikit-learn and call it regr
regr = linear_model.LinearRegression()

#Fit the model to the data by using .fit()
regr.fit(X, y)

#print out the slope of the line (stored in a list called regr.coef_) and the intercept of the line (regr.intercept_).
print(regr.coef_[0])
print(regr.intercept_)

#Create a list called y_predict that is the predictions the regr model would make on the X data.
y_predict = regr.predict(X)

#Plot y_predict vs X as a line, on top of your scatterplot using plt.plot(). 
plt.plot(X, y_predict)
plt.show()

#predict what the year 2050 may look like in terms of honey production. 
X_future = np.array(range(2013, 2050))
X_future = X_future.reshape(-1, 1)
print(X_future)

#Create a list called future_predict that is the y-values that the regr model would predict for the values of X_future.
future_predict = regr.predict(X_future)
print(future_predict)

#Plot future_predict vs X_future on a different plot. 
plt.plot(X_future, future_predict)
plt.show()
